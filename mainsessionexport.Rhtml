<html>

<head>
<title>Title</title>
</head>

<body>

<p>This is an R HTML document. When you click the <b>Knit HTML</b> button a web page will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:</p>

<!--begin.rcode
library(data.table)
library(caret)
library(e1071)
library(ggplot2)
library(corrplot)
library(dplyr)
library('randomForest')
library(rpart)
library(rpart.plot)
library(rattle)
end.rcode-->

<p>loads the data</p>

<!--begin.rcode
setwd("I://fbs//ML//assignment")
traindb<-read.csv2(file="pml-training.csv", header=TRUE, dec=".", sep=",", na.strings=c("NA", NA ,"", "#DIV/0!"))
testdb<-read.table(file="pml-testing.csv",header=TRUE, dec=".", sep=",")
end.rcode-->

<p>removes the first 7th columns without much information and remove the columns with too many NAs</p>
<!--begin.rcode
traindb<-traindb[,-c(1:7)]
data2<-traindb[, -which(names(traindb) %in% c("kurtosis_roll_belt", "kurtosis_picth_belt","skewness_roll_belt", "skewness_roll_belt.1",
                                              "max_roll_belt",  "max_picth_belt","max_yaw_belt" ,"min_roll_belt","min_pitch_belt" ,"min_yaw_belt", "amplitude_roll_belt",    "amplitude_pitch_belt","amplitude_yaw_belt","var_total_accel_belt" ,"avg_roll_belt","stddev_roll_belt", 
                                              "var_roll_belt" , "avg_pitch_belt","stddev_pitch_belt","var_pitch_belt" ,"avg_yaw_belt","stddev_yaw_belt" , "var_yaw_belt",
                                              "avg_pitch_belt", "stddev_pitch_belt","var_pitch_belt","avg_yaw_belt","stddev_yaw_belt","var_yaw_belt",
                                              "avg_pitch_arm" ,"stddev_pitch_arm" ,"var_pitch_arm" ,"avg_yaw_arm","stddev_yaw_arm","var_yaw_arm" ,
                                              "skewness_pitch_forearm","max_roll_forearm" ,"max_picth_forearm","max_yaw_forearm","min_roll_forearm" ,"min_pitch_forearm" ,
                                              "kurtosis_roll_forearm",  "kurtosis_picth_forearm","skewness_roll_forearm", "kurtosis_roll_forearm",   "kurtosis_picth_forearm", "skewness_roll_forearm", 
                                              "avg_yaw_forearm", "stddev_yaw_forearm" ,  "var_yaw_forearm" ,
                                              "avg_roll_forearm",  "stddev_roll_forearm","var_roll_forearm","avg_pitch_forearm" ,"stddev_pitch_forearm" ,"var_pitch_forearm" ,
                                              "kurtosis_roll_arm", "kurtosis_picth_arm" ,  "kurtosis_yaw_arm", 
                                              "vg_roll_forearm", "stddev_roll_forearm" , "var_roll_forearm", "avg_pitch_forearm" , "stddev_pitch_forearm", "var_pitch_forearm", 
                                              "skewness_roll_arm",  "skewness_pitch_arm" , "skewness_yaw_arm", "max_roll_arm" , "max_picth_arm", "max_yaw_arm", "var_accel_forearm",
                                              "min_roll_arm",   "min_pitch_arm",      "min_yaw_arm",    "amplitude_roll_arm", "amplitude_pitch_arm", "amplitude_yaw_arm",
                                              "kurtosis_roll_dumbbell", "kurtosis_picth_dumbbell", "skewness_roll_dumbbell", "skewness_pitch_dumbbell", "max_roll_dumbbell",
                                              "max_picth_dumbbell", "max_yaw_dumbbell", "min_roll_dumbbell", "min_pitch_dumbbell", "min_yaw_dumbbell", "amplitude_roll_dumbbell", "amplitude_pitch_dumbbell", "amplitude_yaw_dumbbell",
                                              "min_yaw_forearm",  "amplitude_roll_forearm", "amplitude_pitch_forearm", "amplitude_yaw_forearm", "kurtosis_yaw_belt", "skewness_yaw_belt", "kurtosis_yaw_dumbbell", "skewness_yaw_dumbbell",
                                              "kurtosis_yaw_forearm", "skewness_yaw_forearm", "var_accel_dumbbell", "avg_roll_dumbbell", "stddev_roll_dumbbell", "var_roll_dumbbell",  "avg_pitch_dumbbell",
                                              "stddev_pitch_dumbbell", "var_pitch_dumbbell", "avg_yaw_dumbbell",   "stddev_yaw_dumbbell", "var_yaw_dumbbell", "var_accel_arm",     "avg_roll_arm",     "stddev_roll_arm", "var_roll_arm"  ))]
end.rcode-->

<p>check the distribution of the outcome variable: more A than other classes, maybe a weigtht will have to be considered
to take this bias into account. The correlation table of the remaining variables suggests that many features are correlated. A PCA could be considered.
Let us check with the trees which features are the most relevant to predict the quality of exercises</p>
<!--begin.rcode
table(data2$classe)
dbnum<-data2 %>% dplyr::select(where(is.numeric))
corrMat <- cor(dbnum)
corrplot(corrMat, method = "color", type = "lower")
end.rcode-->

<p>Splits the sample into a testing and training subsets in order to validate on the 20 unlabelled, applies a 60 vs 40% ratio between training and testing subsets<p>
<!--begin.rcode 
trainIndex = createDataPartition(data2$classe, p = 0.60,list=FALSE)
trainingset = data2[trainIndex,]
testingset = data2[-trainIndex,]
trainingset$classe<-as.factor(as.character(trainingset$classe))

set.seed(12345)
end.rcode-->


<p> exploring with rpart and tree <p>
<!--begin.rcode 
model <- rpart(classe ~., data = trainingset)
model
model$variable.importance
end.rcode-->

<!--begin.rcode fig.width=7, fig.height=6
plot(model)
text(model, digits = 3)
end.rcode-->


<p>caret -- plots the main features delineating the classes. Check of the prediction accuracy and prediction on the validating sample without labels.
Almost 50perc accuracy overall, performances differ across classes, better on A and E. Maybe introducing a weight would help in reducing the bias coming
from the overrepresentation of labels A in the sample.
<p>
<!--begin.rcode 
modFit<-train(classe ~ ., method="rpart", data=trainingset)
print(modFit$finalModel)
end.rcode-->

<!--begin.rcode fig.width=7, fig.height=6
fancyRpartPlot(modFit$finalModel, cex=.6)
end.rcode-->

<!--begin.rcode 
predm1<-predict(modFit, newdata=testingset)
testingset$classe<-as.factor(as.character(testingset$classe))
Cfit<-confusionMatrix(predm1, testingset$classe)
print(Cfit)

res1<- Cfit$overall[1]
res1 
end.rcode-->


<p>Compares the accuracy of the previous predictors and of the predictions with a random forest.
With almost 99.5% accuracy, another algorithm is less likely to provide better results.<p>
<!--begin.rcode 
modelRF=randomForest(classe~., data=trainingset, method='class')
predRF=predict(modelRF,testingset, type='class')
CitRF=confusionMatrix(predRF,testingset$classe)
resRF<- CitRF$overall[1]
resRF
end.rcode-->


<p>As a robustness checks, GBMs estimations are compared. They will continue improving to minimize all errors as well but can overemphasize outliers and cause overfitting. Cross-validation (here 10 folds with 3 repeated samples) is used to neutralize overfitting. 1,000 trees minimum and additional potential hyperparameters.</p>

<!--begin.rcode

fitControl <- trainControl(
  method = "repeatedcv",
  number = 10,
  repeats =3)
GBM <- train(classe ~ ., data = trainingset, method = "gbm", verbose = FALSE, trControl=fitControl)
GBM$finalModel
testingset$classe<-as.factor(as.character(testingset$classe))


predGBM <- predict(GBM, testingset)
cfitGBM <- confusionMatrix(predGBM, testingset$classe)
cfitGBM
end.rcode-->

<p>Random forests giving the most accurate prediction, I use this model trained on the subset to predict the unlabelled data.</p>


<p>drops the variables in this subset to fit the prediction estimated with the training sample.</p>
<!--begin.rcode 
testdb<-testdb[,-c(1:7)]
testdb<-testdb[, -which(names(testdb) %in% c("kurtosis_roll_belt", "kurtosis_picth_belt","skewness_roll_belt", "skewness_roll_belt.1",
                                             "max_roll_belt",  "max_picth_belt","max_yaw_belt" ,"min_roll_belt","min_pitch_belt" ,"min_yaw_belt", "amplitude_roll_belt",    "amplitude_pitch_belt","amplitude_yaw_belt","var_total_accel_belt" ,"avg_roll_belt","stddev_roll_belt", 
                                             "var_roll_belt" , "avg_pitch_belt","stddev_pitch_belt","var_pitch_belt" ,"avg_yaw_belt","stddev_yaw_belt" , "var_yaw_belt",
                                             "avg_pitch_belt", "stddev_pitch_belt","var_pitch_belt","avg_yaw_belt","stddev_yaw_belt","var_yaw_belt",
                                             "avg_pitch_arm" ,"stddev_pitch_arm" ,"var_pitch_arm" ,"avg_yaw_arm","stddev_yaw_arm","var_yaw_arm" ,
                                             "skewness_pitch_forearm","max_roll_forearm" ,"max_picth_forearm","max_yaw_forearm","min_roll_forearm" ,"min_pitch_forearm" ,
                                             "kurtosis_roll_forearm",  "kurtosis_picth_forearm","skewness_roll_forearm", "kurtosis_roll_forearm",   "kurtosis_picth_forearm", "skewness_roll_forearm", 
                                             "avg_yaw_forearm", "stddev_yaw_forearm" ,  "var_yaw_forearm" ,
                                             "avg_roll_forearm",  "stddev_roll_forearm","var_roll_forearm","avg_pitch_forearm" ,"stddev_pitch_forearm" ,"var_pitch_forearm" ,
                                             "kurtosis_roll_arm", "kurtosis_picth_arm" ,  "kurtosis_yaw_arm", 
                                             "vg_roll_forearm", "stddev_roll_forearm" , "var_roll_forearm", "avg_pitch_forearm" , "stddev_pitch_forearm", "var_pitch_forearm", 
                                             "skewness_roll_arm",  "skewness_pitch_arm" , "skewness_yaw_arm", "max_roll_arm" , "max_picth_arm", "max_yaw_arm", "var_accel_forearm",
                                             "min_roll_arm",   "min_pitch_arm",      "min_yaw_arm",    "amplitude_roll_arm", "amplitude_pitch_arm", "amplitude_yaw_arm",
                                             "kurtosis_roll_dumbbell", "kurtosis_picth_dumbbell", "skewness_roll_dumbbell", "skewness_pitch_dumbbell", "max_roll_dumbbell",
                                             "max_picth_dumbbell", "max_yaw_dumbbell", "min_roll_dumbbell", "min_pitch_dumbbell", "min_yaw_dumbbell", "amplitude_roll_dumbbell", "amplitude_pitch_dumbbell", "amplitude_yaw_dumbbell",
                                             "min_yaw_forearm",  "amplitude_roll_forearm", "amplitude_pitch_forearm", "amplitude_yaw_forearm", "kurtosis_yaw_belt", "skewness_yaw_belt", "kurtosis_yaw_dumbbell", "skewness_yaw_dumbbell",
                                             "kurtosis_yaw_forearm", "skewness_yaw_forearm", "var_accel_dumbbell", "avg_roll_dumbbell", "stddev_roll_dumbbell", "var_roll_dumbbell",  "avg_pitch_dumbbell",
                                             "stddev_pitch_dumbbell", "var_pitch_dumbbell", "avg_yaw_dumbbell",   "stddev_yaw_dumbbell", "var_yaw_dumbbell", "var_accel_arm",     "avg_roll_arm",     "stddev_roll_arm", "var_roll_arm"  ))]

predunlab<-predict(modelRF, newdata=testdb)
print(predunlab)
end.rcode-->

</body>
</html>
